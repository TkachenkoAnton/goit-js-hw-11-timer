{"version":3,"sources":["webpack:///./index.js","webpack:///./js/timer.js"],"names":["constructor","selector","targetDate","this","getTime","days","document","querySelector","hours","mins","secs","start","timerUpdate","time","Math","floor","toString","padStart","textContent","setInterval","delta","Date","now"],"mappings":"kHAAA,4B,mBCkDc,IAlDd,MACEA,aAAY,SAAEC,EAAF,WAAYC,IACtBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAAWE,UAC7BD,KAAKE,KAAOC,SAASC,cAChBJ,KAAKF,SAAP,4BAEHE,KAAKK,MAAQF,SAASC,cACjBJ,KAAKF,SAAP,6BAEHE,KAAKM,KAAOH,SAASC,cAChBJ,KAAKF,SAAP,4BAEHE,KAAKO,KAAOJ,SAASC,cAChBJ,KAAKF,SAAP,4BAEHE,KAAKQ,QAGPC,YAAYC,GACV,MAAMR,EAAOS,KAAKC,MAAMF,EAAO,OAC5BG,WACAC,SAAS,EAAG,KAETT,EAAQM,KAAKC,MAAOF,EAAO,MAAR,MACtBG,WACAC,SAAS,EAAG,KAETR,EAAOK,KAAKC,MAAOF,EAAO,KAAR,KACrBG,WACAC,SAAS,EAAG,KAETP,EAAOI,KAAKC,MAAOF,EAAO,IAAe,KAC5CG,WACAC,SAAS,EAAG,KAEfd,KAAKE,KAAKa,YAAcb,EACxBF,KAAKK,MAAMU,YAAcV,EACzBL,KAAKM,KAAKS,YAAcT,EACxBN,KAAKO,KAAKQ,YAAcR,EAG1BC,QACEQ,YAAY,KACV,MAAMC,EAAQjB,KAAKD,WAAamB,KAAKC,MACrCnB,KAAKS,YAAYQ,IAChB,OAI0B,CAC/BnB,SAAU,WACVC,WAAY,IAAImB,KAAK,oB","file":"main.b4f8900b83ac296a09b2.js","sourcesContent":["import \"./styles.css\";\nimport \"./js/timer.js\";\n","class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate.getTime();\n    this.days = document.querySelector(\n      `${this.selector} span[data-value=\"days\"]`\n    );\n    this.hours = document.querySelector(\n      `${this.selector} span[data-value=\"hours\"]`\n    );\n    this.mins = document.querySelector(\n      `${this.selector} span[data-value=\"mins\"]`\n    );\n    this.secs = document.querySelector(\n      `${this.selector} span[data-value=\"secs\"]`\n    );\n    this.start();\n  }\n\n  timerUpdate(time) {\n    const days = Math.floor(time / (1000 * 60 * 60 * 24))\n      .toString()\n      .padStart(2, \"0\");\n\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n      .toString()\n      .padStart(2, \"0\");\n\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60))\n      .toString()\n      .padStart(2, \"0\");\n\n    const secs = Math.floor((time % (1000 * 60)) / 1000)\n      .toString()\n      .padStart(2, \"0\");\n\n    this.days.textContent = days;\n    this.hours.textContent = hours;\n    this.mins.textContent = mins;\n    this.secs.textContent = secs;\n  }\n\n  start() {\n    setInterval(() => {\n      const delta = this.targetDate - Date.now();\n      this.timerUpdate(delta);\n    }, 1000);\n  }\n}\n\nconst timer = new CountdownTimer({\n  selector: \"#timer-1\",\n  targetDate: new Date(\"Jan 01, 2021\"),\n});\n"],"sourceRoot":""}